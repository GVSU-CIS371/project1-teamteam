body,
html {
    height: 100%;
    width: 100%;
    max-width: 100%;
    overflow-x: hidden;
    margin: 0px;
    padding: 0px;
}

#app {
    /* change the layout of the app to be grid */
    display: grid;
    grid-template-rows: auto 1fr auto;
    grid-template-areas:
        "header"
        "main"
        "footer";
    /* make height of the grid take the entire viewport height */
    /* height: 100vh;
  width: 100vw; */
    display: inline;
}

header {
    /* assigning the grid area and color */
    grid-area: header;
    background-color: rgb(227, 74, 74);
    /* stating that this is going to be a flex box for a row and that contents will not wrap onto a new line */
    display: flex;
    flex-flow: row nowrap;
    justify-content: space-between;
    /* align-content: center; */
}

main {
    grid-area: main;
    background-color: rgb(240, 182, 73);
}

footer {
    grid-area: footer;
    background-color: rgb(240, 240, 148);
    display: flex;
    justify-content: center;
}

nav {
    /* we want the nav with the links to be on the top side of the header flexbox */
    align-self: flex-start;
}

h1 {
    /* we want the h1 header to be aligned on the top side of the header flexbox */
    align-self: flex-start;
}

img {
    width: 100px;
}


/* lets make the layout of the store item */
/* want main to be a grid layout */
main {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    /* add a gap vertically and horizontally between all the individual grid elements */
    gap: 1em;
    /* add space from last row to grid elements */
    padding: 1em;
}

/* now to apply css to store items */
main>div.store-item {
    border: 1px solid black;
}

/* creating a grid box in each store item
   which allows spacing for the rating, price, and stock. */
.store-item {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr;
    grid-template-rows: auto;
    grid-template-areas:
        "img img img"
        "title title title"
        "desc desc desc"
        "rating price stock";
}

.store-item img {
    grid-area: img;
}

.store-item p:first-of-type {
    grid-area: title;
}

.store-item p:nth-of-type(2) {
    grid-area: desc;
}

.store-item span:nth-of-type(1) {
    grid-area: rating;
    text-align: left;
}

.store-item span:nth-of-type(2) {
    grid-area: price;
    text-align: center;
}

.store-item span:nth-of-type(3) {
    grid-area: stock;
    text-align: right;
}